{"ast":null,"code":"// client/src/services/api.js\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5001/api',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  // Add timeout\n  timeout: 10000,\n  // 10 seconds\n  // Add withCredentials if you're using cookies\n  withCredentials: true\n});\n\n// Request interceptor with better error logging\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  // Log all requests except sensitive data\n  console.log('API Request:', {\n    url: config.url,\n    method: config.method,\n    headers: {\n      ...config.headers,\n      Authorization: config.headers.Authorization ? '[HIDDEN]' : undefined\n    },\n    data: config.url.includes('password') ? '[HIDDEN]' : config.data\n  });\n  return config;\n}, error => {\n  console.error('Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor with detailed error logging\napi.interceptors.response.use(response => {\n  // Log successful responses\n  console.log('API Response:', {\n    url: response.config.url,\n    status: response.status,\n    data: response.config.url.includes('password') ? '[HIDDEN]' : response.data\n  });\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$config, _error$config2, _error$config3, _error$config3$url, _error$config4;\n  // Log detailed error information\n  console.error('API Error Details:', {\n    message: error.message,\n    response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n    status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n    config: {\n      url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n      method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method,\n      data: (_error$config3 = error.config) !== null && _error$config3 !== void 0 && (_error$config3$url = _error$config3.url) !== null && _error$config3$url !== void 0 && _error$config3$url.includes('password') ? '[HIDDEN]' : (_error$config4 = error.config) === null || _error$config4 === void 0 ? void 0 : _error$config4.data\n    }\n  });\n\n  // Handle different error scenarios\n  if (error.response) {\n    // Server responded with an error\n    switch (error.response.status) {\n      case 401:\n        // Unauthorized - clear token and redirect to login\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n        break;\n      case 403:\n        // Forbidden - handle access denied\n        console.error('Access denied');\n        break;\n      case 404:\n        // Not found\n        console.error('Resource not found');\n        break;\n      case 422:\n        // Validation error\n        console.error('Validation failed:', error.response.data);\n        break;\n      case 500:\n        // Server error\n        console.error('Server error:', error.response.data);\n        break;\n      default:\n        console.error('Unhandled error status:', error.response.status);\n    }\n  } else if (error.request) {\n    // Request was made but no response received\n    console.error('No response received:', error.request);\n  } else {\n    // Something else happened while setting up the request\n    console.error('Error setting up request:', error.message);\n  }\n  return Promise.reject(error);\n});\n\n// Add convenience methods for common operations\napi.auth = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  forgotPassword: email => api.post('/auth/forgot-password', {\n    email\n  }),\n  changePassword: passwords => api.post('/auth/change-password', passwords),\n  getProfile: () => api.get('/auth/me')\n};\napi.bookings = {\n  create: bookingData => api.post('/bookings', bookingData),\n  getAll: () => api.get('/bookings/my'),\n  getOne: id => api.get(`/bookings/${id}`),\n  cancel: id => api.patch(`/bookings/${id}/cancel`),\n  checkAvailability: date => api.get(`/bookings/availability/${date}`)\n};\napi.admin = {\n  getAllBookings: () => api.get('/admin/bookings'),\n  getAllUsers: () => api.get('/admin/users'),\n  updateBookingStatus: (id, status) => api.patch(`/admin/bookings/${id}/status`, {\n    status\n  }),\n  deleteBooking: id => api.delete(`/admin/bookings/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","timeout","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","console","log","url","method","undefined","data","includes","error","Promise","reject","response","status","_error$response","_error$response2","_error$config","_error$config2","_error$config3","_error$config3$url","_error$config4","message","removeItem","window","location","href","auth","login","credentials","post","register","userData","forgotPassword","email","changePassword","passwords","getProfile","get","bookings","bookingData","getAll","getOne","id","cancel","patch","checkAvailability","date","admin","getAllBookings","getAllUsers","updateBookingStatus","deleteBooking","delete"],"sources":["/Users/scottwattenbarger/Desktop/WattEvent/CasinoSite/client/src/services/api.js"],"sourcesContent":["// client/src/services/api.js\nimport axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5001/api',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  // Add timeout\n  timeout: 10000, // 10 seconds\n  // Add withCredentials if you're using cookies\n  withCredentials: true\n});\n\n// Request interceptor with better error logging\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    \n    // Log all requests except sensitive data\n    console.log('API Request:', {\n      url: config.url,\n      method: config.method,\n      headers: {\n        ...config.headers,\n        Authorization: config.headers.Authorization ? '[HIDDEN]' : undefined\n      },\n      data: config.url.includes('password') ? '[HIDDEN]' : config.data\n    });\n    \n    return config;\n  },\n  (error) => {\n    console.error('Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor with detailed error logging\napi.interceptors.response.use(\n  (response) => {\n    // Log successful responses\n    console.log('API Response:', {\n      url: response.config.url,\n      status: response.status,\n      data: response.config.url.includes('password') ? '[HIDDEN]' : response.data\n    });\n    return response;\n  },\n  (error) => {\n    // Log detailed error information\n    console.error('API Error Details:', {\n      message: error.message,\n      response: error.response?.data,\n      status: error.response?.status,\n      config: {\n        url: error.config?.url,\n        method: error.config?.method,\n        data: error.config?.url?.includes('password') ? '[HIDDEN]' : error.config?.data\n      }\n    });\n    \n    // Handle different error scenarios\n    if (error.response) {\n      // Server responded with an error\n      switch (error.response.status) {\n        case 401:\n          // Unauthorized - clear token and redirect to login\n          localStorage.removeItem('token');\n          window.location.href = '/login';\n          break;\n          \n        case 403:\n          // Forbidden - handle access denied\n          console.error('Access denied');\n          break;\n          \n        case 404:\n          // Not found\n          console.error('Resource not found');\n          break;\n          \n        case 422:\n          // Validation error\n          console.error('Validation failed:', error.response.data);\n          break;\n          \n        case 500:\n          // Server error\n          console.error('Server error:', error.response.data);\n          break;\n          \n        default:\n          console.error('Unhandled error status:', error.response.status);\n      }\n    } else if (error.request) {\n      // Request was made but no response received\n      console.error('No response received:', error.request);\n    } else {\n      // Something else happened while setting up the request\n      console.error('Error setting up request:', error.message);\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// Add convenience methods for common operations\napi.auth = {\n  login: (credentials) => api.post('/auth/login', credentials),\n  register: (userData) => api.post('/auth/register', userData),\n  forgotPassword: (email) => api.post('/auth/forgot-password', { email }),\n  changePassword: (passwords) => api.post('/auth/change-password', passwords),\n  getProfile: () => api.get('/auth/me'),\n};\n\napi.bookings = {\n  create: (bookingData) => api.post('/bookings', bookingData),\n  getAll: () => api.get('/bookings/my'),\n  getOne: (id) => api.get(`/bookings/${id}`),\n  cancel: (id) => api.patch(`/bookings/${id}/cancel`),\n  checkAvailability: (date) => api.get(`/bookings/availability/${date}`),\n};\n\napi.admin = {\n  getAllBookings: () => api.get('/admin/bookings'),\n  getAllUsers: () => api.get('/admin/users'),\n  updateBookingStatus: (id, status) => api.patch(`/admin/bookings/${id}/status`, { status }),\n  deleteBooking: (id) => api.delete(`/admin/bookings/${id}`),\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}