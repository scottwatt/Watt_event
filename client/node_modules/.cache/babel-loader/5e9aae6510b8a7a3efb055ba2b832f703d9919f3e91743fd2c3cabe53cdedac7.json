{"ast":null,"code":"var _s = $RefreshSig$();\n// client/src/components/SEO.js\nimport React, { useEffect } from 'react';\nconst SEO = ({\n  title,\n  description,\n  keywords,\n  canonicalUrl,\n  ogImage = '/images/watt-events-og.jpg',\n  schemaMarkup,\n  noindex = false\n}) => {\n  _s();\n  const siteTitle = \"Watt Events - Casino Rentals Bakersfield\";\n  const defaultDescription = \"Professional casino party rentals in Bakersfield, California. Poker, Blackjack, Roulette & Craps tables for corporate events, parties & fundraisers. Call 661-302-0115\";\n  const baseUrl = \"https://wattevent.com\";\n  useEffect(() => {\n    // Update document title\n    document.title = title ? `${title} | ${siteTitle}` : siteTitle;\n\n    // Update or create meta description\n    let metaDescription = document.querySelector('meta[name=\"description\"]');\n    if (!metaDescription) {\n      metaDescription = document.createElement('meta');\n      metaDescription.name = 'description';\n      document.head.appendChild(metaDescription);\n    }\n    metaDescription.content = description || defaultDescription;\n\n    // Update or create meta keywords\n    if (keywords) {\n      let metaKeywords = document.querySelector('meta[name=\"keywords\"]');\n      if (!metaKeywords) {\n        metaKeywords = document.createElement('meta');\n        metaKeywords.name = 'keywords';\n        document.head.appendChild(metaKeywords);\n      }\n      metaKeywords.content = keywords;\n    }\n\n    // Update or create canonical link\n    let canonical = document.querySelector('link[rel=\"canonical\"]');\n    if (!canonical) {\n      canonical = document.createElement('link');\n      canonical.rel = 'canonical';\n      document.head.appendChild(canonical);\n    }\n    canonical.href = canonicalUrl || baseUrl;\n\n    // Add schema markup if provided\n    if (schemaMarkup) {\n      let schemaScript = document.querySelector('#schema-script');\n      if (!schemaScript) {\n        schemaScript = document.createElement('script');\n        schemaScript.id = 'schema-script';\n        schemaScript.type = 'application/ld+json';\n        document.head.appendChild(schemaScript);\n      }\n      schemaScript.textContent = JSON.stringify(schemaMarkup);\n    }\n\n    // Open Graph meta tags\n    const ogTags = [{\n      property: 'og:title',\n      content: title || siteTitle\n    }, {\n      property: 'og:description',\n      content: description || defaultDescription\n    }, {\n      property: 'og:type',\n      content: 'website'\n    }, {\n      property: 'og:url',\n      content: canonicalUrl || baseUrl\n    }, {\n      property: 'og:image',\n      content: `${baseUrl}${ogImage}`\n    }, {\n      property: 'og:locale',\n      content: 'en_US'\n    }, {\n      property: 'og:site_name',\n      content: 'Watt Events'\n    }];\n    ogTags.forEach(tag => {\n      let ogMeta = document.querySelector(`meta[property=\"${tag.property}\"]`);\n      if (!ogMeta) {\n        ogMeta = document.createElement('meta');\n        ogMeta.setAttribute('property', tag.property);\n        document.head.appendChild(ogMeta);\n      }\n      ogMeta.content = tag.content;\n    });\n\n    // Twitter Card meta tags\n    const twitterTags = [{\n      name: 'twitter:card',\n      content: 'summary_large_image'\n    }, {\n      name: 'twitter:title',\n      content: title || siteTitle\n    }, {\n      name: 'twitter:description',\n      content: description || defaultDescription\n    }, {\n      name: 'twitter:image',\n      content: `${baseUrl}${ogImage}`\n    }];\n    twitterTags.forEach(tag => {\n      let twitterMeta = document.querySelector(`meta[name=\"${tag.name}\"]`);\n      if (!twitterMeta) {\n        twitterMeta = document.createElement('meta');\n        twitterMeta.name = tag.name;\n        document.head.appendChild(twitterMeta);\n      }\n      twitterMeta.content = tag.content;\n    });\n  }, [title, description, keywords, canonicalUrl, ogImage, schemaMarkup, siteTitle, defaultDescription, baseUrl]);\n  return null; // This component doesn't render anything\n};\n_s(SEO, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SEO;\nexport default SEO;\nvar _c;\n$RefreshReg$(_c, \"SEO\");","map":{"version":3,"names":["React","useEffect","SEO","title","description","keywords","canonicalUrl","ogImage","schemaMarkup","noindex","_s","siteTitle","defaultDescription","baseUrl","document","metaDescription","querySelector","createElement","name","head","appendChild","content","metaKeywords","canonical","rel","href","schemaScript","id","type","textContent","JSON","stringify","ogTags","property","forEach","tag","ogMeta","setAttribute","twitterTags","twitterMeta","_c","$RefreshReg$"],"sources":["/Users/scottwattenbarger/Downloads/WattEventsWebsite/Watt_event_fresh/client/src/components/SEO.js"],"sourcesContent":["// client/src/components/SEO.js\nimport React, { useEffect } from 'react';\n\nconst SEO = ({ \n  title, \n  description, \n  keywords, \n  canonicalUrl,\n  ogImage = '/images/watt-events-og.jpg',\n  schemaMarkup,\n  noindex = false \n}) => {\n  const siteTitle = \"Watt Events - Casino Rentals Bakersfield\";\n  const defaultDescription = \"Professional casino party rentals in Bakersfield, California. Poker, Blackjack, Roulette & Craps tables for corporate events, parties & fundraisers. Call 661-302-0115\";\n  const baseUrl = \"https://wattevent.com\";\n  \n  useEffect(() => {\n    // Update document title\n    document.title = title ? `${title} | ${siteTitle}` : siteTitle;\n    \n    // Update or create meta description\n    let metaDescription = document.querySelector('meta[name=\"description\"]');\n    if (!metaDescription) {\n      metaDescription = document.createElement('meta');\n      metaDescription.name = 'description';\n      document.head.appendChild(metaDescription);\n    }\n    metaDescription.content = description || defaultDescription;\n    \n    // Update or create meta keywords\n    if (keywords) {\n      let metaKeywords = document.querySelector('meta[name=\"keywords\"]');\n      if (!metaKeywords) {\n        metaKeywords = document.createElement('meta');\n        metaKeywords.name = 'keywords';\n        document.head.appendChild(metaKeywords);\n      }\n      metaKeywords.content = keywords;\n    }\n    \n    // Update or create canonical link\n    let canonical = document.querySelector('link[rel=\"canonical\"]');\n    if (!canonical) {\n      canonical = document.createElement('link');\n      canonical.rel = 'canonical';\n      document.head.appendChild(canonical);\n    }\n    canonical.href = canonicalUrl || baseUrl;\n    \n    // Add schema markup if provided\n    if (schemaMarkup) {\n      let schemaScript = document.querySelector('#schema-script');\n      if (!schemaScript) {\n        schemaScript = document.createElement('script');\n        schemaScript.id = 'schema-script';\n        schemaScript.type = 'application/ld+json';\n        document.head.appendChild(schemaScript);\n      }\n      schemaScript.textContent = JSON.stringify(schemaMarkup);\n    }\n    \n    // Open Graph meta tags\n    const ogTags = [\n      { property: 'og:title', content: title || siteTitle },\n      { property: 'og:description', content: description || defaultDescription },\n      { property: 'og:type', content: 'website' },\n      { property: 'og:url', content: canonicalUrl || baseUrl },\n      { property: 'og:image', content: `${baseUrl}${ogImage}` },\n      { property: 'og:locale', content: 'en_US' },\n      { property: 'og:site_name', content: 'Watt Events' }\n    ];\n    \n    ogTags.forEach(tag => {\n      let ogMeta = document.querySelector(`meta[property=\"${tag.property}\"]`);\n      if (!ogMeta) {\n        ogMeta = document.createElement('meta');\n        ogMeta.setAttribute('property', tag.property);\n        document.head.appendChild(ogMeta);\n      }\n      ogMeta.content = tag.content;\n    });\n    \n    // Twitter Card meta tags\n    const twitterTags = [\n      { name: 'twitter:card', content: 'summary_large_image' },\n      { name: 'twitter:title', content: title || siteTitle },\n      { name: 'twitter:description', content: description || defaultDescription },\n      { name: 'twitter:image', content: `${baseUrl}${ogImage}` }\n    ];\n    \n    twitterTags.forEach(tag => {\n      let twitterMeta = document.querySelector(`meta[name=\"${tag.name}\"]`);\n      if (!twitterMeta) {\n        twitterMeta = document.createElement('meta');\n        twitterMeta.name = tag.name;\n        document.head.appendChild(twitterMeta);\n      }\n      twitterMeta.content = tag.content;\n    });\n    \n  }, [title, description, keywords, canonicalUrl, ogImage, schemaMarkup, siteTitle, defaultDescription, baseUrl]);\n  \n  return null; // This component doesn't render anything\n};\n\nexport default SEO;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}